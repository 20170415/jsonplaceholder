extends layout

block header
  h1= title

  p.lead A small fake online REST API for testing and prototyping.

  p.buttons
    |  <iframe src="http://ghbtns.com/github-btn.html?user=typicode&repo=jsonplaceholder&type=watch&count=true"
    |    allowtransparency="true" frameborder="0" scrolling="0" width="110" height="20"></iframe>
    |  <a href="https://twitter.com/share" class="twitter-share-button" data-dnt="true">Tweet</a>
    
block content

  h2 A small set of Resources

  .tabbable.tabs-left
    ul.nav.nav-tabs
      li 
        a(href='/posts/1') /posts/1
      li
        a(href='/comments/1') /comments/1
      li 
        a(href='/albums/1') /albums/1
      li
        a(href='/photos/1') /photos/1
      li 
        a(href='/users/1') /users/1
      li 
        a(href='/todos/1') /todos/1
    .tab-content
      .tab-pane.active
        pre
          code.language-javascript
        p
          a#url
          span.glyphicon.glyphicon-new-window

  h2 GET, POST, PUT and DELETE

  p.
    To play with #{title} just copy and paste theses examples in your console.

  pre
    code.language-javascript.
      // POST adds a random id to the object sent
      $.ajax('http://jsonplaceholder.com/posts', {
        method: 'POST',
        data: {
          title: 'foo',
          body: 'bar',
          userId: 1
        }
      }).then(function(data) {
        console.log(data);
      });

      /* will return
      {
        id: 134985902,
        title: 'foo',
        body: 'bar',
        userId: 1
      }
      */

  pre
    code.language-javascript.
      // PUT returns the object sent
      $.ajax('http://jsonplaceholder.com/posts/1', {
        method: 'PUT',
        data: {
          id: 1
          title: 'foo',
          body: 'bar',
          userId: 1
        }
      }).then(function(data) {
        console.log(data);
      });

      /* will return
      {
        id: 1
        title: 'foo',
        body: 'bar',
        userId: 1
      }
      */

  pre
    code.language-javascript.
      // DELETE returns a 200 status only
      $.ajax('http://jsonplaceholder.com/posts/1', {
        method: 'DELETE'
      });

  p.
    Note: #{title} is stateless therefore POST, PUT and DELETE won't affect resources.
    However it's faked as if.

  h2 Has many relationships

  #relationships
    :markdown
      Users __have many__ Albums, Photos, Tasks, Posts.

      Albums __have many__ Photos.

      Posts __have many__ Comments.

  h2 Filtering and nested resources

  p Basic filtering is supported through query parameters.

  pre
    code.language-javascript.
      // Will return all the posts that belong to the first user
      $.ajax('http://jsonplaceholder.com/posts?userId=1').then(function(data) {
        console.log(data);
      });

  p One level of nested route is available.

  pre
    code.language-javascript.
      $.ajax('http://jsonplaceholder.com/posts/1/comments').then(function(data) {
        console.log(data);
      });
      // Which is equivalent to /comments?postId=1

  h2 Cross-domain

  p CORS and JSONP are both supported.

  pre
    code.language-javascript.
      $.ajax('http://jsonplaceholder.com/posts/1', {
        dataType: 'jsonp'
      }).then(function(data) {
        console.log(data);
      });

  h2 Compatibility

  p #{title} is compatible with Backbone, Angular, Ember, ...

  |  <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>